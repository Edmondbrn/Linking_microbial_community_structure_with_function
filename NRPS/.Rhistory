sum(sample_sums(rhizoplane_NRPS_co))
# Here, the taxonomic proportions of assigned reads are visualised - Might need to go back in to analysis_NRPS_amplicon_edited_by_FB.rmd"
# for more details and background files
library(tidyverse)
library(ggplot2)
plot_annotation = function(data, type){
colors = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3")
ggplot(data = data, aes(x = 2, y = Freq, fill = Var1))+
geom_bar(stat = "identity", width = 1, color = "black") +
coord_polar(theta = "y") + # line to remove to have a stacked barplot
xlim(0.5, 2.5) +
geom_text(aes(label = paste0(round(Freq, 3), "%")),
position = position_stack(vjust = 0.5)) +
theme_void() +
theme(legend.position = "right", legend.text = element_text(size = 15)) +
labs(fill = "ASV")+
scale_fill_manual(values = colors) # Utilisation de la palette de couleurs
}
compute_freq = function (data){ # fonction to select and compute the proportion of annotated clusters in the data
asv_table = otu_table(data)
asv_table = asv_table[rowSums(asv_table)>0,]
asv_present = rownames(asv_table)
taxonomy_table = tax_table(data)
taxonomy_asv = as.data.frame(taxonomy_table[asv_present, ])
annot = as.data.frame(prop.table(table(taxonomy_asv$superkingdom)) * 100)
return(annot)
}
physeq_rhizoplane_drought<- subset_samples(physeq_rhizoplane, Irrigation %in% "Drought")
physeq_rhizoplane_watered<-subset_samples(physeq_rhizoplane, Irrigation %in% "Watered")
physeq_rhizoplane <- readRDS("resources/RDS/raw_physeq_rhizoplane.rds")
physeq_rhizoplane <- readRDS("ressources/RDS/raw_physeq_rhizoplane.rds")
physeq_rhizoplane_drought<- subset_samples(physeq_rhizoplane, Irrigation %in% "Drought")
physeq_rhizoplane_watered<-subset_samples(physeq_rhizoplane, Irrigation %in% "Watered")
annot_drought<-compute_freq(physeq_rhizoplane_drought)
annot_watered<-compute_freq(physeq_rhizoplane_watered)
# Calculate product
compute_freq_product = function (data){ # function to select and compute the proportion of annotated clusters in the data
asv_table = otu_table(data)
asv_table = asv_table[rowSums(asv_table)>0,]
asv_present = rownames(asv_table)
taxonomy_table = tax_table(data)
taxonomy_asv = as.data.frame(taxonomy_table[asv_present, ])
annot = as.data.frame(prop.table(table(taxonomy_asv$product)) * 100)
return(annot)
}
compute_freq_taxa_of_assigned = function (data,name){ # function to select and compute the proportion of annotated clusters in the data
asv_table = otu_table(data)
asv_table = asv_table[rowSums(asv_table)>0,]
asv_present = rownames(asv_table)
taxonomy_table = tax_table(data)
taxonomy_asv = as.data.frame(taxonomy_table[asv_present, ])
annot = as.data.frame(prop.table(table(taxonomy_asv$phylum)) * 100)
colnames(annot) = c("Phylum",name)
return(annot)
}
physeq_rp_dr_assi<-subset_taxa(physeq_rhizoplane_drought, !product == "unassigned" )
physeq_rp_dr_assi<-prune_taxa(taxa_sums(physeq_rp_dr_assi) > 0, physeq_rp_dr_assi)
physeq_rp_dr_assi_w4<-physeq_rp_dr_assi %>% subset_samples(WEEK %in% "4weeks")
sample_data(physeq_rp_dr_assi)
physeq_rp_dr_assi_w4<-physeq_rp_dr_assi %>% subset_samples(WEEK %in% "week 4")
physeq_rp_dr_assi_w5<-physeq_rp_dr_assi %>% subset_samples(!WEEK %in% "week 4")
annot_phyl_rp_dr_w4<-compute_freq_taxa_of_assigned(physeq_rp_dr_assi_w4,"W4 D")
annot_phyl_rp_dr_w5<-compute_freq_taxa_of_assigned(physeq_rp_dr_assi_w5,"W5 D")
annot_phyl_rp_dr_w4
physeq_rp_ww_assi<-subset_taxa(physeq_rhizoplane_watered, !product == "unassigned" )
physeq_rp_ww_assi <-physeq_rp_ww_assi %>% subset_samples(Treatment %in% "Control")
physeq_rp_ww_assi <-prune_taxa(taxa_sums(physeq_rp_ww_assi ) > 0, physeq_rp_ww_assi )
physeq_rp_ww_assi_w4<-physeq_rp_ww_assi %>% subset_samples(WEEK %in% "week 4")
physeq_rp_ww_assi_w5<-physeq_rp_ww_assi %>% subset_samples(!WEEK %in% "week 4")
annot_phyl_rp_ww_w4<-compute_freq_taxa_of_assigned(physeq_rp_ww_assi_w4,"W4 C")
annot_phyl_rp_ww_w5<-compute_freq_taxa_of_assigned(physeq_rp_ww_assi_w5,"W5 C")
#Include week 2
physeq_rp_ww_assi_w2<-physeq_rp_ww_assi %>% subset_samples(WEEK %in% "week 2")
annot_phyl_rp_ww_w2<-compute_freq_taxa_of_assigned(physeq_rp_ww_assi_w2,"W2 C")
#Combined verything for easier plotting
list_dfs<-list(annot_phyl_rp_dr_w4,annot_phyl_rp_dr_w5,annot_phyl_rp_ww_w4,annot_phyl_rp_ww_w5, annot_phyl_rp_ww_w2)
combined_dfs<-list_dfs %>% reduce(full_join, by='Phylum') %>% pivot_longer(!Phylum,names_to = "Treatment",values_to = "Proportion")
annotated_proportions<-ggplot(combined_dfs, aes(x = Treatment, y = Proportion, fill = Phylum)) + geom_bar(position="fill", stat="identity")+
theme_bw()+
theme(legend.position = "right", legend.text = element_text(size = 10),
axis.text.x = element_text(size = 8)) +
scale_fill_manual(values =   c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3"))
annotated_proportions
combined_dfs
combined_dfs # Proportion of NRPS for each phylum
View(combined_dfs)
combined_dfs$Phylum[combined_dfs$Phylum %in% "Pseudomonadota"]<-"Proteobacteria"
combined_dfs$Phylum
combined_dfs<-list_dfs %>% reduce(full_join, by='Phylum') %>% pivot_longer(!Phylum,names_to = "Treatment",values_to = "Proportion")
combined_dfs$Phylum[combined_dfs$Phylum %in% "Pseudomonadota"]
combined_dfs$Phylum[combined_dfs$Phylum %in% "Pseudomonadota"]
combined_dfs$Phylum[combined_dfs$Phylum %in% "Pseudomonadota"]<-"Proteobacteria"
combined_dfs<-list_dfs %>% reduce(full_join, by='Phylum') %>% pivot_longer(!Phylum,names_to = "Treatment",values_to = "Proportion")
combined_dfs$Phylum<-gsub("Pseudomonadota","Proteobacteria",combined_dfs$Phylum)
combined_dfs$Phylum
annotated_proportions<-ggplot(combined_dfs, aes(x = Treatment, y = Proportion, fill = Phylum)) + geom_bar(position="fill", stat="identity")+
theme_bw()+
theme(legend.position = "right", legend.text = element_text(size = 10),
axis.text.x = element_text(size = 8)) +
scale_fill_manual(values =   c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3"))
annotated_proportions
annotated_proportions<-ggplot(combined_dfs, aes(x = Treatment, y = Proportion, fill = Phylum)) + geom_bar(position="fill", stat="identity")+
theme_bw()+
theme(legend.position = "right", legend.text = element_text(size = 10),
panel.grid = element_blank()
axis.text.x = element_text(size = 8)) +
annotated_proportions<-ggplot(combined_dfs, aes(x = Treatment, y = Proportion, fill = Phylum)) + geom_bar(position="fill", stat="identity")+
theme_bw()+
theme(legend.position = "right", legend.text = element_text(size = 10),
panel.grid = element_blank()
axis.text.x = element_text(size = 8)) +
annotated_proportions<-ggplot(combined_dfs, aes(x = Treatment, y = Proportion, fill = Phylum)) + geom_bar(position="fill", stat="identity")+
theme_bw()+
theme(legend.position = "right", legend.text = element_text(size = 10),
panel.grid = element_blank(),
axis.text.x = element_text(size = 8)) +
scale_y_continuous(expand = c(0,0))+
scale_fill_manual(values =   c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3"))
annotated_proportions
#Import data
physeq_rhizoplane <- readRDS("ressources/RDS/Rarefied_physeq_mean_rounded_rhizoplane.rds")
physeq_rhizoplane_drought<- subset_samples(physeq_rhizoplane, Irrigation %in% "Drought")
physeq_rhizoplane_watered<-subset_samples(physeq_rhizoplane, Irrigation %in% "Watered")
annot_drought<-compute_freq(physeq_rhizoplane_drought)
annot_watered<-compute_freq(physeq_rhizoplane_watered)
# Calculate product
compute_freq_product = function (data){ # function to select and compute the proportion of annotated clusters in the data
asv_table = otu_table(data)
asv_table = asv_table[rowSums(asv_table)>0,]
asv_present = rownames(asv_table)
taxonomy_table = tax_table(data)
taxonomy_asv = as.data.frame(taxonomy_table[asv_present, ])
annot = as.data.frame(prop.table(table(taxonomy_asv$product)) * 100)
return(annot)
}
compute_freq_taxa_of_assigned = function (data,name){ # function to select and compute the proportion of annotated clusters in the data
asv_table = otu_table(data)
asv_table = asv_table[rowSums(asv_table)>0,]
asv_present = rownames(asv_table)
taxonomy_table = tax_table(data)
taxonomy_asv = as.data.frame(taxonomy_table[asv_present, ])
annot = as.data.frame(prop.table(table(taxonomy_asv$phylum)) * 100)
colnames(annot) = c("Phylum",name)
return(annot)
}
physeq_rp_dr_assi<-subset_taxa(physeq_rhizoplane_drought, !product == "unassigned" )
physeq_rp_dr_assi<-prune_taxa(taxa_sums(physeq_rp_dr_assi) > 0, physeq_rp_dr_assi)
sample_data(physeq_rp_dr_assi)
physeq_rp_dr_assi_w4<-physeq_rp_dr_assi %>% subset_samples(WEEK %in% "week 4")
physeq_rp_dr_assi_w5<-physeq_rp_dr_assi %>% subset_samples(!WEEK %in% "week 4")
annot_phyl_rp_dr_w4<-compute_freq_taxa_of_assigned(physeq_rp_dr_assi_w4,"W4 D")
physeq_rp_dr_assi<-subset_taxa(physeq_rhizoplane_drought, !product == "unassigned" )
physeq_rp_dr_assi<-prune_taxa(taxa_sums(physeq_rp_dr_assi) > 0, physeq_rp_dr_assi)
sample_data(physeq_rp_dr_assi)
physeq_rp_dr_assi_w4<-physeq_rp_dr_assi %>% subset_samples(WEEK %in% "4weeks")
physeq_rp_dr_assi_w5<-physeq_rp_dr_assi %>% subset_samples(!WEEK %in% "4weeks")
annot_phyl_rp_dr_w4<-compute_freq_taxa_of_assigned(physeq_rp_dr_assi_w4,"W4 D")
annot_phyl_rp_dr_w5<-compute_freq_taxa_of_assigned(physeq_rp_dr_assi_w5,"W5 D")
physeq_rp_ww_assi<-subset_taxa(physeq_rhizoplane_watered, !product == "unassigned" )
physeq_rp_ww_assi
physeq_rp_ww_assi <-physeq_rp_ww_assi %>% subset_samples(Treatment %in% "Control")
physeq_rp_ww_assi <-prune_taxa(taxa_sums(physeq_rp_ww_assi ) > 0, physeq_rp_ww_assi )
physeq_rp_ww_assi_w4<-physeq_rp_ww_assi %>% subset_samples(WEEK %in% "4weeks")
physeq_rp_ww_assi_w5<-physeq_rp_ww_assi %>% subset_samples(!WEEK %in% "4weeks")
annot_phyl_rp_ww_w4<-compute_freq_taxa_of_assigned(physeq_rp_ww_assi_w4,"W4 C")
annot_phyl_rp_ww_w5<-compute_freq_taxa_of_assigned(physeq_rp_ww_assi_w5,"W5 C")
#Include week 2
physeq_rp_ww_assi_w2<-physeq_rp_ww_assi %>% subset_samples(WEEK %in% "2weeks")
#Include week 2
physeq_rp_ww_assi_w2<-physeq_rp_ww_assi %>% subset_samples(WEEK %in% "2weeks")
annot_phyl_rp_ww_w2<-compute_freq_taxa_of_assigned(physeq_rp_ww_assi_w2,"W2 C")
#Combined verything for easier plotting
list_dfs<-list(annot_phyl_rp_dr_w4,annot_phyl_rp_dr_w5,annot_phyl_rp_ww_w4,annot_phyl_rp_ww_w5, annot_phyl_rp_ww_w2)
combined_dfs<-list_dfs %>% reduce(full_join, by='Phylum') %>% pivot_longer(!Phylum,names_to = "Treatment",values_to = "Proportion")
combined_dfs # Proportion of NRPS for each phylum
View(combined_dfs)
combined_dfs$Phylum<-gsub("Pseudomonadota","Proteobacteria",combined_dfs$Phylum)
annotated_proportions<-ggplot(combined_dfs, aes(x = Treatment, y = Proportion, fill = Phylum)) + geom_bar(position="fill", stat="identity")+
theme_bw()+
theme(legend.position = "right", legend.text = element_text(size = 10),
panel.grid = element_blank(),
axis.text.x = element_text(size = 8)) +
scale_y_continuous(expand = c(0,0))+
scale_fill_manual(values =   c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3"))
annotated_proportions
Rarefied_amp_mean_rp<-amp_load(physeq_rhizoplane)
library(ampvis2)
Rarefied_amp_mean_rp<-amp_load(physeq_rhizoplane)
Rarefied_amp_mean_rp$metadata$Irrigation[Rarefied_amp_mean_rp$metadata$Irrigation %in% "Watered"]<-"Control"
Rarefied_amp_mean_rp$tax$OTU<-gsub("amplicon_cluster","AC",Rarefied_amp_mean_rp$tax$OTU)
heatmap_rp<-Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3) + theme(axis.text.y = element_text(size=8))
heatmap_rp
heatmap_rp<-Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3) +
theme(axis.text.y = element_text(size=8),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12))
eatmap_rp
heatmap_rp
Rarefied_amp_mean_rp<-amp_load(physeq_rhizoplane)
Rarefied_amp_mean_rp$metadata$Irrigation[Rarefied_amp_mean_rp$metadata$Irrigation %in% "Watered"]<-"C"
Rarefied_amp_mean_rp$metadata$Irrigation[Rarefied_amp_mean_rp$metadata$Irrigation %in% "Drought"]<-"D"
Rarefied_amp_mean_rp$metadata
Rarefied_amp_mean_rp$metadata$WEEK[Rarefied_amp_mean_rp$metadata$WEEK %in% "2weeks"]<-"Week 2"
Rarefied_amp_mean_rp$metadata$WEEK[Rarefied_amp_mean_rp$metadata$WEEK %in% "4weeks"]<-"Week 4"
Rarefied_amp_mean_rp$metadata$WEEK[Rarefied_amp_mean_rp$metadata$WEEK %in% "5weeks"]<-"Week 5"
Rarefied_amp_mean_rp$tax$OTU<-gsub("amplicon_cluster","AC",Rarefied_amp_mean_rp$tax$OTU)
heatmap_rp<-Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3) +
theme(axis.text.y = element_text(size=8),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12))
heatmap_rp
heatmap_rp<-Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3,
color_vector = c("White", "Brown")) +
theme(axis.text.y = element_text(size=8),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12))
heatmap_rp
heatmap_rp<-Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3,
color_vector = c("White", "Brown")) +
theme(axis.text.y = element_text(size=10),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12))
heatmap_rp
Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3,
color_vector = c("White", "Brown")) +
theme(axis.text.y = element_text(size=10),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12), axis.text.x = element_text(angle = 45))
Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3,
color_vector = c("White", "Brown")) +
theme(axis.text.y = element_text(size=10),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12), axis.text.x = element_text(angle = 90))
Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3,
color_vector = c("White", "Brown")) +
theme(axis.text.y = element_text(size=10),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12), axis.text.x = element_text(angle = 0))
Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3,
color_vector = c("White", "Brown")) +
theme(axis.text.y = element_text(size=10),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12), axis.text.x = element_text(angle = 0, hjust = 1))
Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3,
color_vector = c("White", "Brown")) +
theme(axis.text.y = element_text(size=10),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12), axis.text.x = element_text(angle = 0, hjust = 0.5))
heatmap_rp<-Rarefied_amp_mean_rp%>% amp_heatmap(group_by = "Irrigation", facet_by = "WEEK",
tax_show = 25, tax_aggregate = "OTU",
tax_add = "Genus", plot_values_size = 3,
color_vector = c("White", "Brown")) +
theme(axis.text.y = element_text(size=10),strip.background = element_rect(fill="white", color = "black"),
strip.text = element_text(size =12), axis.text.x = element_text(angle = 0, hjust = 0.5))
library(ggpubr)
x11(width = 7, height = 8)
ggarrange(annotated_proportions,heatmap_rp, ncol = 1 , labels = c("A","B"), heights = c(0.3,0.7))
ggsave("output/Fig3.png",dpi = 300)
dev.off()
all_mibigs<-read.table("ressources/RDS/full_blast_mibig_cluster2.txt", header = TRUE, sep ="\t", dec = ".")
#Subset only the "viscosin,"
viscosin_mibig<-all_mibigs[all_mibigs$Compound %in% "viscosin,",] # 223 ACs
#Use raw phyloseq version version, that means not rarefied data
physeq_raw<- readRDS("ressources/RDS/Rarefied_physeq_rhizoplane.rds")
#Use raw phyloseq version version, that means not rarefied data
physeq_raw<- readRDS("ressources/RDS/raw_physeq_rhizoplane.rds")
physeq_control<-physeq_raw %>% subset_samples(Compartments %in% c("rhizoplane","rhizosphere"))  %>% subset_samples(Treatment %in% "Control")
library(tidyverse)
physeq_control<-physeq_raw %>% subset_samples(Compartments %in% c("rhizoplane","rhizosphere"))  %>% subset_samples(Treatment %in% "Control")
amp_control<-amp_load(physeq_control)
library(ampvis2)
amp_control<-amp_load(physeq_control)
amp_control$metadata
# Make a heatmap of the viscosin abundances rhizosphere vs. rhizoplane
amp_control %>% amp_subset_taxa(tax_vector = viscosin_ACs,normalise = TRUE) %>%
amp_subset_samples(Irrigation %in% "Watered") %>%
amp_heatmap(group_by = "Compartments", facet_by ="WEEK",
tax_aggregate = "Phylum", normalise = FALSE, round = 3)
#Subset only the "viscosin,"
viscosin_mibig<-all_mibigs[all_mibigs$Compound %in% "viscosin,",] # 223 ACs
viscosin_ACs<-viscosin_mibig$Query
# Make a heatmap of the viscosin abundances rhizosphere vs. rhizoplane
amp_control %>% amp_subset_taxa(tax_vector = viscosin_ACs,normalise = TRUE) %>%
amp_subset_samples(Irrigation %in% "Watered") %>%
amp_heatmap(group_by = "Compartments", facet_by ="WEEK",
tax_aggregate = "Phylum", normalise = FALSE, round = 3)
amp_control %>% amp_subset_taxa(tax_vector = viscosin_ACs,normalise = TRUE) %>%
amp_subset_samples(Compartments %in% "rhizoplane") %>%
amp_heatmap(group_by = "Irrigation", facet_by ="WEEK",
tax_aggregate = "Phylum", normalise = FALSE, round = 3)
amp_control %>% amp_subset_taxa(tax_vector = viscosin_ACs,normalise = TRUE) %>%
amp_subset_samples(Compartments %in% "rhizoplane") %>%
amp_heatmap(group_by = "Irrigation", facet_by ="WEEK",
tax_aggregate = "Phylum", normalise = FALSE, round = 3)
CLPs<-paste(c("putisolvin","viscosin","massetolide","surfactin","amphisin","factin","banana","orfamide","asplenin","entolysin",
"tolaasin","peptin","sclerosin","xantholysin","cocoyamide","tensin","lokisin","milkisin", "arthrofactin",
"anikasin","hodersin","nepenthensin","oakridgin","prosekin","pseudodesmin","pseudophomin",
"syringotoxin","gacamide","sessilin","cichorinotoxin"),collapse ="|")
CLP_mibig<-all_mibigs[grepl(CLPs,all_mibigs$Compound),]
#Now it needs to be curated
all_CLPs_unfil<-CLP_mibig %>% group_by(Compound) %>%
summarise(n = n()) %>% arrange(desc(n))
#Remove
unique(all_CLPs_unfil$Compound)
CLP_remove<-paste(c("glidopeptin","anabaenopeptin","cinnapeptin","omnipeptin", "empedopeptin", "polyoxypeptin","micropeptin",
"hypeptin","leupeptin", "incarnatapeptin","sarpentin","stechlisin","pelgipeptin", "livipeptin", "octapeptin"),
collapse = "|")
CLP_mibig_red<-CLP_mibig[!grepl(CLP_remove,CLP_mibig$Compound),]
red_CLPs<-CLP_mibig_red %>% group_by(Compound) %>%
summarise(n = n()) %>% arrange(desc(n)) #29 CLPs left in the data
CLP_ACs<-CLP_mibig_red$Query
heatmap_CLPs_all<-amp_control %>% amp_subset_taxa(tax_vector = CLP_ACs,normalise = TRUE) %>%
amp_subset_samples(Compartments %in% "rhizoplane") %>%
amp_heatmap(group_by = "Irrigation", facet_by ="WEEK",
tax_aggregate = "Genus", normalise = FALSE, round = 3)
heatmap_CLPs_all
#Plot Pseudomonas only
amp_control %>% amp_subset_taxa(tax_vector = CLP_ACs,normalise = TRUE) %>%
amp_subset_samples(Compartments %in% "rhizoplane") %>% amp_subset_taxa(tax_vector = "Pseudomonas", normalise = FALSE) %>%
amp_heatmap(group_by = "Irrigation", facet_by ="WEEK",
tax_aggregate = "OTU", normalise = FALSE, round = 3, tax_show = 25)
#Get the total
amp_control %>% amp_subset_taxa(tax_vector = CLP_ACs,normalise = TRUE) %>%
amp_subset_samples(Compartments %in% "rhizoplane") %>% amp_subset_taxa(tax_vector = "Pseudomonas", normalise = FALSE) %>%
amp_heatmap(group_by = "Irrigation", facet_by ="WEEK",
tax_aggregate = "Genus", normalise = FALSE, round = 3, tax_show = 25)
#Get the total
amp_control %>% amp_subset_taxa(tax_vector = CLP_ACs,normalise = TRUE) %>%
amp_subset_samples(Compartments %in% "rhizoplane") %>% amp_subset_taxa(tax_vector = "Pseudomonas", normalise = FALSE) %>%
amp_heatmap(group_by = "Irrigation", facet_by ="WEEK",
tax_aggregate = "Genus", normalise = FALSE, round = 3, tax_show = 25)
#Plot Pseudomonas only
amp_control %>% amp_subset_taxa(tax_vector = CLP_ACs,normalise = TRUE) %>%
amp_subset_samples(Compartments %in% "rhizoplane") %>% amp_subset_taxa(tax_vector = "Pseudomonas", normalise = FALSE) %>%
amp_heatmap(group_by = "Irrigation", facet_by ="WEEK",
tax_aggregate = "OTU", normalise = FALSE, round = 3, tax_show = 25)
# Then I want to pull out the Pseudomonas
CLP_pse_table<-amp_control %>% amp_subset_taxa(tax_vector = CLP_ACs,normalise = TRUE) %>%
amp_subset_samples(Compartments %in% "rhizoplane") %>% amp_subset_taxa(tax_vector = "Pseudomonas", normalise = FALSE) %>%
amp_heatmap(group_by = "Irrigation", facet_by ="WEEK",
tax_aggregate = "OTU", normalise = FALSE, round = 3, tax_show = 105, textmap = TRUE)
CLP_pse_table
CLP_pse_table$Query<-rownames(CLP_pse_table)
CLPs_abu_mibig<-left_join(CLP_pse_table,CLP_mibig_red,by = "Query")
CLPs_abu_mibig$Compound[CLPs_abu_mibig$Compound %in% "thanafactin A,"]<-"thanafactin A"
CLPs_abu_mibig$Compound[CLPs_abu_mibig$Compound %in% c("putisolvin III, putisolvin VI putisolvin V,")]<-"putisolvin"
CLPs_abu_mibig$Compound[CLPs_abu_mibig$Compound %in% c("bananamide F, bananamide D, bananamide G, bananamide E,")]<-"bananamide"
CLPs_abu_mibig$Compound[CLPs_abu_mibig$Compound %in% c("tolaasin A,","tolaasin I, tolaasin F,")]<-"Tolaasin"
CLPs_abu_mibig$Compound[CLPs_abu_mibig$Compound %in% c("viscosin,")]<-"Viscosin"
#Then plot them
CLP_mean_vals<-CLPs_abu_mibig %>% pivot_longer(cols = ends_with("weeks"),
names_to = "Week_treat",
values_to ="Rel_abu") %>% select(-E.value,-Info,-Identity...,-Positives...,-Gaps...) %>%
group_by(Compound, Week_treat) %>%
summarise(sum = sum(Rel_abu),
n = n())
CLP_mean_vals
CLPs_abu_mibig
CLPs_abu_mibig %>% pivot_longer(cols = c(starts_with("Dr"), starts_with("Wa")),
names_to = "Week_treat",
values_to ="Rel_abu")
CLP_mean_vals<-CLPs_abu_mibig %>% pivot_longer(cols = c(starts_with("Dr"), starts_with("Wa")),
names_to = "Week_treat",
values_to ="Rel_abu") %>% select(-E.value,-Info,-Identity...,-Positives...,-Gaps...) %>%
group_by(Compound, Week_treat) %>%
summarise(sum = sum(Rel_abu),
n = n())
CLP_mean_vals
#Check that the sum is correct
CLP_mean_vals %>% group_by(Week_treat) %>%
summarise(total = sum(sum))
#Before plotting I round the numbers
CLP_mean_vals$sum<-round(CLP_mean_vals$sum,4)
CLP_mean_vals$Week_treat<-as.character(CLP_mean_vals$Week_treat)
CLP_mean_vals$Week_treat<-factor(CLP_mean_vals$Week_treat, levels = c("Watered 2weeks","Watered 4weeks","Drought 4weeks", "Watered 5weeks","Drought 5weeks"))
CLP_means_full<-cbind(CLP_mean_vals,str_split_fixed(CLP_mean_vals$Week_treat," ", 2))
colnames(CLP_means_full)[5:6]<-c("Treatment","Week")
CLP_means_full$Week<-gsub("weeks","",CLP_means_full$Week)
CLP_means_full$Treatment[CLP_means_full$Treatment %in% "Watered"]<-"C"
CLP_means_full$Treatment[CLP_means_full$Treatment %in% "Drought"]<-"D"
Pseu_clp_heat<-
ggplot(CLP_means_full, aes(x =Treatment, y = Compound, fill = sum)) +geom_tile(color = "white",
lwd = 1.5,
linetype = 1)+
facet_grid(cols = vars(Week), scales = "free_x", space="free")+
geom_text(aes(label = round(sum,2)), color = "black", size = 3) +
scale_fill_gradient(low = "White", high = "Brown")+
#  coord_fixed()+
theme(axis.text = element_text(size = 13),                       legend.position = "none",
axis.title = element_blank())+theme(plot.margin=grid::unit(c(0,0,0,0), "mm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background =  element_blank(),
strip.background = element_rect(fill="white", color = "black"))+ggtitle("Week")+
theme(plot.title = element_text(hjust = 0.5))
Pseu_clp_heat
CLP_means_full
#Check that the sum is correct
CLP_mean_vals %>% group_by(Week_treat) %>%
summarise(total = sum(sum))
#Then plot them
CLP_mean_vals<-CLPs_abu_mibig %>% pivot_longer(cols = c(starts_with("Dr"), starts_with("Wa")),
names_to = "Week_treat",
values_to ="Rel_abu") %>% select(-E.value,-Info,-Identity...,-Positives...,-Gaps...) %>%
group_by(Compound, Week_treat) %>%
summarise(sum = sum(Rel_abu),
n = n())
#Check that the sum is correct
CLP_mean_vals %>% group_by(Week_treat) %>%
summarise(total = sum(sum))
#Before plotting I round the numbers
CLP_mean_vals$sum<-round(CLP_mean_vals$sum,4)
CLP_mean_vals$Week_treat<-as.character(CLP_mean_vals$Week_treat)
CLP_mean_vals$Week_treat<-factor(CLP_mean_vals$Week_treat, levels = c("Watered week 2","Watered week 4","Drought week 4", "Watered week 5","Drought week 5"))
LP_means_full<-cbind(CLP_mean_vals,str_split_fixed(CLP_mean_vals$Week_treat," ", 2))
colnames(CLP_means_full)[5:6]<-c("Treatment","Week")
CLP_means_full$Week<-gsub("weeks","",CLP_means_full$Week)
CLP_means_full$Treatment[CLP_means_full$Treatment %in% "Watered"]<-"C"
CLP_means_full$Treatment[CLP_means_full$Treatment %in% "Drought"]<-"D"
Pseu_clp_heat<-
ggplot(CLP_means_full, aes(x =Treatment, y = Compound, fill = sum)) +geom_tile(color = "white",
lwd = 1.5,
linetype = 1)+
facet_grid(cols = vars(Week), scales = "free_x", space="free")+
geom_text(aes(label = round(sum,2)), color = "black", size = 3) +
scale_fill_gradient(low = "White", high = "Brown")+
#  coord_fixed()+
theme(axis.text = element_text(size = 13),                       legend.position = "none",
axis.title = element_blank())+theme(plot.margin=grid::unit(c(0,0,0,0), "mm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background =  element_blank(),
strip.background = element_rect(fill="white", color = "black"))+ggtitle("Week")+
theme(plot.title = element_text(hjust = 0.5))
Pseu_clp_heat
#Then plot them
CLP_mean_vals<-CLPs_abu_mibig %>% pivot_longer(cols = c(starts_with("Dr"), starts_with("Wa")),
names_to = "Week_treat",
values_to ="Rel_abu") %>% select(-E.value,-Info,-Identity...,-Positives...,-Gaps...) %>%
group_by(Compound, Week_treat) %>%
summarise(sum = sum(Rel_abu),
n = n())
CLP_mean_vals$sum<-round(CLP_mean_vals$sum,4)
CLP_mean_vals$Week_treat<-as.character(CLP_mean_vals$Week_treat)
CLP_mean_vals$Week_treat<-factor(CLP_mean_vals$Week_treat, levels = c("Watered week 2","Watered week 4","Drought week 4", "Watered week 5","Drought week 5"))
CLP_mean_vals$Week_treat
cbind(CLP_mean_vals,str_split_fixed(CLP_mean_vals$Week_treat," ", 2))
colnames(CLP_means_full)[5:6]<-c("Treatment","Week")
#CLP_means_full$Week<-gsub("weeks","",CLP_means_full$Week)
CLP_means_full$Treatment[CLP_means_full$Treatment %in% "Watered"]<-"C"
CLP_means_full$Treatment[CLP_means_full$Treatment %in% "Drought"]<-"D"
CLP_means_full
# add the week numbers as a variable
CLP_means_full<-cbind(CLP_mean_vals,str_split_fixed(CLP_mean_vals$Week_treat," ", 2))
CLP_means_full
colnames(CLP_means_full)[5:6]<-c("Treatment","Week")
CLP_means_full
#CLP_means_full$Week<-gsub("weeks","",CLP_means_full$Week)
CLP_means_full$Treatment[CLP_means_full$Treatment %in% "Watered"]<-"C"
CLP_means_full
CLP_means_full$Treatment[CLP_means_full$Treatment %in% "Drought"]<-"D"
CLP_means_full
ggplot(CLP_means_full, aes(x =Treatment, y = Compound, fill = sum))
ggplot(CLP_means_full, aes(x =Treatment, y = Compound, fill = sum)) +geom_tile(color = "white",
lwd = 1.5,
linetype = 1)+
facet_grid(cols = vars(Week), scales = "free_x", space="free")
Pseu_clp_heat<-
ggplot(CLP_means_full, aes(x =Treatment, y = Compound, fill = sum)) +geom_tile(color = "white",
lwd = 1.5,
linetype = 1)+
facet_grid(cols = vars(Week), scales = "free_x", space="free")+
geom_text(aes(label = round(sum,2)), color = "black", size = 3) +
scale_fill_gradient(low = "White", high = "Brown")+
#  coord_fixed()+
theme(axis.text = element_text(size = 13),                       legend.position = "none",
axis.title = element_blank())+theme(plot.margin=grid::unit(c(0,0,0,0), "mm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background =  element_blank(),
strip.background = element_rect(fill="white", color = "black"))+ggtitle("Week")+
theme(plot.title = element_text(hjust = 0.5))
Pseu_clp_heat
CLP_means_full$Week<-gsub("week","",CLP_means_full$Week)
Pseu_clp_heat<-
ggplot(CLP_means_full, aes(x =Treatment, y = Compound, fill = sum)) +geom_tile(color = "white",
lwd = 1.5,
linetype = 1)+
facet_grid(cols = vars(Week), scales = "free_x", space="free")+
geom_text(aes(label = round(sum,2)), color = "black", size = 3) +
scale_fill_gradient(low = "White", high = "Brown")+
#  coord_fixed()+
theme(axis.text = element_text(size = 13),                       legend.position = "none",
axis.title = element_blank())+theme(plot.margin=grid::unit(c(0,0,0,0), "mm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background =  element_blank(),
strip.background = element_rect(fill="white", color = "black"))+ggtitle("Week")+
theme(plot.title = element_text(hjust = 0.5))
Pseu_clp_heat
x11(height = 4, width = 5)
Pseu_clp_heat
x11(height = 4, width = 5.5)
Pseu_clp_heat
ggsave("Output/Figure5_heatmap_CLPs_PSeu.png",dpi = 300)
